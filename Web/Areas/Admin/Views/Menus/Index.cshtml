
@{
    ViewData["Title"] = "Index";
}

<div ng-controller="IndexController" ng-cloak>
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">@ViewData["Title"].</h4>
            <div class="row">
                <div class="col-md-12">
                    <table id="myTable" class="table table-hover"></table>
                </div>
            </div>
        </div>
    </div>
    <button ng-click="Create()" class="btn btn-success btn-floated">
        <span class="fa fa-plus"></span>
    </button>

    <!-- Large modal -->
    <div id="PnModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="PnModalLabel" aria-hidden="true">
        <!-- .modal-dialog -->
        <div class="modal-dialog" role="document">
            <!-- .modal-content -->
            <div class="modal-content">
                <!-- .modal-header -->
                <div class="modal-header">
                    <h5 class="modal-title"> {{ UpdateMode ? "Cập nhật" : "Thêm mới" }} </h5>
                </div>
                <!-- /.modal-header -->
                <!-- .modal-body -->
                <!-- form .needs-validation -->
                <form id="frmModal" name="frmModal" class="needs-validation" novalidate="">
                    <!-- /form .needs-validation -->
                    <div class="modal-body">
                        <div class="col-md-12">
                            <label>
                                Parent
                                <abbr title="Required">*</abbr>
                            </label>
                            <select class="form-control" ng-options="c.Id as c.Name for c in Data" ng-model="Menu.ParentId">
                                <option value="" selected="selected">---Select parent---</option>
                            </select>

                        </div>
                        <div class="col-md-12">
                            <label>
                                Name
                                <abbr title="Required">*</abbr>
                            </label>

                            <input type="text" class="form-control" ng-model="Menu.Name" required="">
                        </div>
                        <div class="col-md-12">
                            <label>
                                Url
                                <abbr title="Required">*</abbr>
                            </label>
                            <input type="text" class="form-control" ng-model="Menu.Url" required="">
                        </div>
                        <div class="col-md-12">
                            <label>
                                Icon
                            </label>
                            <input type="text" class="form-control" ng-model="Menu.Icon">
                        </div>
                        <div class="col-md-12">
                            <label>
                                Order
                            </label>
                            <input type="text" class="form-control" ng-model="Menu.Order">
                        </div>

                        <div class="col-md-12">
                            <div class="custom-control custom-checkbox mt-3">
                                <input type="checkbox" class="custom-control-input" id="SystemEnable" ng-model="Menu.IsActive">
                                <label class="custom-control-label" for="SystemEnable">Is active</label>
                            </div>
                        </div>
                    </div>
                    <!-- /.modal-body -->
                    <!-- .modal-footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-light" data-dismiss="modal">Đóng</button>
                        <button type="submit" class="btn btn-primary" ng-disabled="frmModal.$invalid" ng-click="Save()">{{ UpdateMode ? "Cập nhật" : "Thêm" }}</button>
                    </div>
                </form>
                <!-- /.modal-footer -->
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->
</div>

@section scripts{
    <script>
        var IndexController = ($scope, $rootScope, $timeout, $filter, $compile, ApiHelper, CommonHelper, UtilFactory, DataFactory, $q) => {

            //#region declare variable
            $scope.UpdateMode = false;
            $scope.Menu = {};
            $scope.Data = [];
            //#endregion

            //#region Datatable
            $(function () {
                var peopleList = $('#myTable').DataTable({
                    "bProcessing": true,
                    "bSort": true,
                    "bServerSide": true,
                    "language": {
                        paginate: {
                            previous: '<i class="fa fa-lg fa-angle-left"></i>',
                            next: '<i class="fa fa-lg fa-angle-right"></i>'
                        }
                    },
                    "sAjaxSource": "/Menus/Data",
                    "aoColumnDefs": [
                        {
                            "sName": "Name",
                            "sTitle": "Name",
                            "bSearchable": true,
                            "bSortable": true,
                            "aTargets": [0]
                        },
                        {
                            "sName": "Url",
                            "sTitle": "Url",
                            "bSearchable": true,
                            "bSortable": true,
                            "aTargets": [1]
                        },
                        {
                            "sName": "Order",
                            "sTitle": "Order",
                            "bSearchable": true,
                            "bSortable": true,
                            "aTargets": [2]
                        },
                        {
                            'mRender': function (data, type, row, meta) {
                                return `<i class="fa fa-edit" ng-click="Update('` + data + `');"></i>\n
                                                                <a class="btn btn-sm btn-secondary" href="javascript:void(0)" ng-click="Delete('` + data + `');"><i class="far fa-trash-alt"></i></a>`;
                            },
                            "sName": "Id",
                            "bSortable": false,
                            "aTargets": [3]
                        }
                    ],
                    createdRow: function (row, data, dataIndex) {
                        $compile(angular.element(row).contents())($scope);
                    }
                });
            });
            //#endregion

            //#region ReadById
            var ReadById = (Id) => {
                let defer = $q.defer();
                let strApiEndPoint = CommonHelper.MenuUrl + Id;
                ApiHelper.GetMethod(strApiEndPoint)
                    .then(function (response) {
                        $scope.Menu = response.Data;
                        defer.resolve(response);
                    })
                    .catch(function (response) { sys.Alert(false, response.Message); });
                return defer.promise;
            };
            //#endregion

            //#region Create
            $scope.Create = function () {
                $scope.UpdateMode = false;
                $scope.Menu = {};
                $('#PnModal').modal('show');
            };
            //#endregion

            //#region Update
            $scope.Update = function (Id) {
                $scope.UpdateMode = true;
                ReadById(Id);
                $('#PnModal').modal('show');
            }
            //#endregion

            //#region Delete
            $scope.Delete = function (Id) {
                bootbox.confirm({
                    title: "Thông báo",
                    message: "Xác nhận xóa?",
                    callback: function (result) {
                        if (result) {
                            let strApiEndPoint = CommonHelper.MenuUrl + "?id=" + Id;
                            ApiHelper.DeleteMethod(strApiEndPoint)
                                .then(function (response) {
                                    $('#myTable').DataTable().ajax.reload(null, false);
                                    sys.Alert(true, 'Xóa thành công!');
                                })
                                .catch(function (response) { sys.Alert(false, response.Message); });
                        }
                    }
                })
            };
            //#endregion

            //#region Save
            $scope.Save = function () {
                if (!$scope.UpdateMode) {
                    let strApiEndPoint = CommonHelper.MenuUrl + "create";
                    ApiHelper.PostMethod(strApiEndPoint, $scope.Menu)
                        .then(function (response) {
                            $('#myTable').DataTable().ajax.reload(null, false);
                            sys.Alert(true, 'Thêm thành công');
                        })
                        .catch(function (response) { sys.Alert(false, response.Message); });
                    $('#PnModal').modal('hide');
                }
                else {
                    let strApiEndPoint = CommonHelper.MenuUrl + "update";
                    ApiHelper.PutMethod(strApiEndPoint, $scope.Menu)
                        .then(function (response) {
                            $('#myTable').DataTable().ajax.reload(null, false);
                            sys.Alert(true, 'Cập nhật thành công');
                        })
                        .catch(function (response) { sys.Alert(false, response.Message); });
                    $('#PnModal').modal('hide');
                }
            };
            //#endregion

            //#region GetAll
            UtilFactory.WaitingLoadDirective(
                [
                ]).then(() => {
                    $q.all({
                        Menus: DataFactory.Menus_Get(),
                    }).then((MultipleRes) => {
                        $scope.Data = MultipleRes.Menus.Data;
                    });
                }).catch((response) => {
                    throw response;
                });
            //#endregion
        }
        IndexController.$inject = ["$scope", "$rootScope", "$timeout", "$filter", "$compile", "ApiHelper", "CommonHelper", "UtilFactory", "DataFactory", "$q"];
        addController("IndexController", IndexController);
    </script>
}


@*@model IEnumerable<Shared.Models.MenuViewModel>

    @{
        ViewBag.Title = "Quản lý menu";
    }

    <div class="col-sm-12">
        <div class="panel panel-default">
            <div class="panel-heading b-b b-light">
                <span class="pull-right">
                    <a href="@Url.Action("Add", "Menu")" data-toggle="modal" data-target="#modal-action" class="btn btn-addon btn-sm btn-info" style="margin-top:-5px">
                        <i class="fa fa-plus"></i> Thêm mới
                    </a>
                </span>
                <a class="font-bold">@ViewBag.Title</a>
            </div>
            <div class="panel-body">
                <table class="table table-striped b-t b-b" id="tblMain">
                    <thead>
                        <tr>
                            <th>STT</th>
                            <th>Tên menu</th>
                            <th>Menu cha</th>
                            <th>Đường dẫn</th>
                            <th>Sắp xếp</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                </table>

            </div>
        </div>
    </div>
    @section scripts
    {
        <script>
            $('#tblMain').DataTable({
                "language": {
                    "search": "Tìm kiếm:",
                    "paginate": {
                        "first": "Trang đầu",
                        "last": "Trang cuối",
                        "next": "Trang kế tiếp",
                        "previous": "Trang trước"
                    },
                    "lengthMenu": "Hiển thị _MENU_ dòng",
                    "info": "Đang hiển thị _START_ đến _END_ của _TOTAL_ dòng",
                    "infoEmpty": "Đang hiển thị 0 đến 0 của 0 dòng",
                    "infoFiltered": "(lọc từ tổng số _MAX_ dòng)",
                    "zeroRecords": "Không tìm thấy kết quả",
                    "emptyTable": "Không có dữ liệu nào trong bảng",
                    "loadingRecords": "Đang tải...",
                    "processing": "Đang xử lý...",
                },
                autoWidth: false,
                processing: true,
                serverSide: true,
                order: [[1, "asc"]],
                pageLength: 10,
                ajax: {
                    url: '/Menu/GetDataTable',
                },
                columnDefs: [
                    {
                        targets: 0,
                        searchable: false,
                        orderable: false,
                        data: "Id",
                        render: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    { targets: 1, data: 'Name' },
                    { targets: 2, data: 'ParentName' },
                    { targets: 3, data: 'Url' },
                    { targets: 4, data: 'Order' },
                    {
                        targets: 5,
                        data: 'Id',
                        searchable: false,
                        orderable: false,
                        render: function (data, type, row, meta) {
                            var html = '<div class="btn-group dropdown">';
                            html += '<button class="btn btn-default btn-sm btn-bg dropdown-toggle" data-toggle="dropdown">';
                            html += '<span class="dropdown-label"><i class="fa fa-dedent fa-fw text"></i></span>';
                            html += '<span class="caret"></span>';
                            html += '</button>';
                            html += '<ul class="dropdown-menu text-sm">';
                            html += '<li><a data-toggle="modal" href="/Menu/Edit?id=' + data + '" data-target="#modal-action"><i class="fa fa-pencil"></i> Sửa</a></li>';
                            html += '<li><a data-toggle="modal" href="/Menu/Delete?id=' + data + '" data-target="#modal-action"><i class="fa fa-trash"></i> Xóa</a></li>';
                            html += '</ul>';
                            html += '</div>';
                            return html;
                        }
                    }
                ]
            }).on('draw', function () {
                $('div.btn-group').parent().css('text-align', 'center');
                $('tr').find('td:eq(0)').css('text-align', 'center');
            });
        </script>
    }*@