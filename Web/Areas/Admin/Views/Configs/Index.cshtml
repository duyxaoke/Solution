
    @{
        ViewData["Title"] = "Index";
    }
    <div ng-controller="IndexController" ng-cloak>
        <!-- .card -->
        <section class="card">
            <!-- floating action -->
            <button ng-click="Create()" class="btn btn-success btn-floated">
                <span class="fa fa-plus"></span>
            </button>
            <!-- /floating action -->
            <!-- .card-body -->
            <div class="card-body">
                <fieldset>
                    <legend>@ViewData["Title"].</legend>
                    <table id="myTable" class="table table-hover"></table>
                </fieldset>
            </div>
            <!-- /.card-body -->
        </section>
        <!-- Large modal -->
        <div id="PnModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="PnModalLabel" aria-hidden="true">
            <!-- .modal-dialog -->
            <div class="modal-dialog" role="document">
                <!-- .modal-content -->
                <div class="modal-content">
                    <!-- .modal-header -->
                    <div class="modal-header">
                        <h5 class="modal-title"> {{ UpdateMode ? "Cập nhật" : "Thêm mới" }} </h5>
                    </div>
                    <!-- /.modal-header -->
                    <!-- .modal-body -->
                    <!-- form .needs-validation -->
                    <form id="frmModal" name="frmModal" class="needs-validation" novalidate="">
                        <!-- /form .needs-validation -->
                        <div class="modal-body">
                            <div class="col-md-12">
                                <label>
                                    Currency
                                    <abbr title="Required">*</abbr>
                                </label>

                                <input type="text" class="form-control" ng-model="Config.Currency" required="">
                            </div>
                            <div class="col-md-12">
                                <label>
                                    Referal bonus
                                    <abbr title="Required">*</abbr>
                                </label>
                                <input type="text" class="form-control" ng-model="Config.ReferalBonus" required="">
                            </div>
                            <div class="col-md-12">
                                <div class="custom-control custom-checkbox mt-3">
                                    <input type="checkbox" class="custom-control-input" id="SystemEnable" ng-model="Config.SystemEnable">
                                    <label class="custom-control-label" for="SystemEnable">System enable</label>
                                </div>
                            </div>
                        </div>
                        <!-- /.modal-body -->
                        <!-- .modal-footer -->
                        <div class="modal-footer">
                            <button type="button" class="btn btn-light" data-dismiss="modal">Đóng</button>
                            <button type="submit" class="btn btn-primary" ng-disabled="frmModal.$invalid" ng-click="Save()">{{ UpdateMode ? "Cập nhật" : "Thêm" }}</button>
                        </div>
                    </form>
                    <!-- /.modal-footer -->
                </div>
                <!-- /.modal-content -->
            </div>
            <!-- /.modal-dialog -->
        </div>
        <!-- /.modal -->
    </div>

    @section scripts{
        <script>
            var IndexController = ($scope, $rootScope, $timeout, $filter, $compile, ApiHelper, CommonHelper, $q) => {

                //#region declare variable
                $scope.UpdateMode = false;
                $scope.Config = {};
                //#endregion

                //#region Datatable
                $(function () {
                    var peopleList = $('#myTable').DataTable({
                        "bProcessing": true,
                        "bSort": true,
                        "bServerSide": true,
                        "language": {
                            paginate: {
                                previous: '<i class="fa fa-lg fa-angle-left"></i>',
                                next: '<i class="fa fa-lg fa-angle-right"></i>'
                            }
                        },
                        "sAjaxSource": "/Configs/Data",
                        "aoColumnDefs": [
                            {
                                "sName": "SystemEnable",
                                "sTitle": "System enable",
                                "bSearchable": true,
                                "bSortable": true,
                                "aTargets": [0]
                            },
                            {
                                "sName": "Currency",
                                "sTitle": "Currency",
                                "bSearchable": true,
                                "bSortable": true,
                                "aTargets": [1]
                            },
                            {
                                "sName": "ReferalBonus",
                                "sTitle": "Referal bonus",
                                "bSearchable": true,
                                "bSortable": true,
                                "aTargets": [2]
                            },
                            {
                                'mRender': function (data, type, row, meta) {
                                    return `<a class="btn btn-sm btn-secondary" href="javascript:void(0)" ng-click="Update('` + data + `');"><i class="fa fa-pencil-alt"></i></a>\n
                                                <a class="btn btn-sm btn-secondary" href="javascript:void(0)" ng-click="Delete('` + data + `');"><i class="far fa-trash-alt"></i></a>`;
                                },
                                "sName": "Id",
                                "bSortable": false,
                                "aTargets": [3]
                            }
                        ],
                        createdRow: function (row, data, dataIndex) {
                            $compile(angular.element(row).contents())($scope);
                        }
                    });
                });
                //#endregion

                //#region ReadById
                var ReadById = (Id) => {
                    let defer = $q.defer();
                    let strApiEndPoint = CommonHelper.ConfigUrl + Id;
                    ApiHelper.GetMethod(strApiEndPoint)
                        .then(function (response) {
                            $scope.Config = response.Data;
                            defer.resolve(response);
                        }).catch(function (response) { });
                    return defer.promise;
                };
                //#endregion

                //#region Create
                $scope.Create = function () {
                    $scope.UpdateMode = false;
                    $scope.Config = {};
                    $('#PnModal').modal('show');
                };
                //#endregion

                //#region Update
                $scope.Update = function (Id) {
                    $scope.UpdateMode = true;
                    ReadById(Id);
                    $('#PnModal').modal('show');
                }
                //#endregion

                //#region Delete
                $scope.Delete = function (Id) {
                    bootbox.confirm({
                        title: "Thông báo",
                        message: "Xác nhận xóa?",
                        callback: function (result) {
                            if (result) {
                                let strApiEndPoint = CommonHelper.ConfigUrl + "?id=" + Id;
                                ApiHelper.DeleteMethod(strApiEndPoint)
                                    .then(function (response) {
                                        $('#myTable').DataTable().ajax.reload(null, false);
                                        sys.Alert(true, 'Xóa thành công!');
                                    }).catch(function (response) { });
                            }
                        }
                    })
                };
                //#endregion

                //#region Save
                $scope.Save = function () {
                    if (!$scope.UpdateMode) {
                        let strApiEndPoint = CommonHelper.ConfigUrl + "create";
                        ApiHelper.PostMethod(strApiEndPoint, $scope.Config)
                            .then(function (response) {
                                $('#myTable').DataTable().ajax.reload(null, false);
                                sys.Alert(true, 'Thêm thành công');
                            })
                            .catch(function (response) { });
                        $('#PnModal').modal('hide');
                    }
                    else {
                        let strApiEndPoint = CommonHelper.ConfigUrl + "update";
                        ApiHelper.PutMethod(strApiEndPoint, $scope.Config)
                            .then(function (response) {
                                $('#myTable').DataTable().ajax.reload(null, false);
                                sys.Alert(true, 'Cập nhật thành công');
                            }).catch(function (response) { });
                        $('#PnModal').modal('hide');
                    }
                };
                //#endregion
            }
            IndexController.$inject = ["$scope", "$rootScope", "$timeout", "$filter", "$compile", "ApiHelper", "CommonHelper", "$q"];
            addController("IndexController", IndexController);
        </script>
    }
